<includes>

    <variable name="MovieMPAAVar">
        <value condition="StringCompare(Skin.String(MovieMPAALang),DE)">$VAR[MovieMPAAVar_DE]</value>
        <value condition="StringCompare(Skin.String(MovieMPAALang),IT)">$VAR[MovieMPAAVar_IT]</value>
        <value condition="StringCompare(Skin.String(MovieMPAALang),UK)">$VAR[MovieMPAAVar_UK]</value>
        <value>$VAR[MovieMPAAVar_US]</value>
    </variable>
    
    <variable name="MovieMPAAVar_DE">
        <value condition="SubString(ListItem.MPAA,18) | SubString(Container(100).ListItem.Property(MPAA),18)">de/18</value>
        <value condition="SubString(ListItem.MPAA,16) | SubString(Container(100).ListItem.Property(MPAA),16)">de/16</value>
        <value condition="SubString(ListItem.MPAA,12) | SubString(Container(100).ListItem.Property(MPAA),12)">de/12</value>
        <value condition="SubString(ListItem.MPAA,6) | SubString(Container(100).ListItem.Property(MPAA),6)">de/6</value>
        <value condition="SubString(ListItem.MPAA,0) | SubString(Container(100).ListItem.Property(MPAA),0)">de/0</value>
    </variable>
    
    <variable name="MovieMPAAVar_IT">
        <value condition="SubString(ListItem.MPAA,T) | SubString(Container(100).ListItem.Property(MPAA),T)">it/t</value>
        <value condition="SubString(ListItem.MPAA,14) | SubString(Container(100).ListItem.Property(MPAA),14)">it/vm14</value>
        <value condition="SubString(ListItem.MPAA,18) | SubString(Container(100).ListItem.Property(MPAA),18)">it/vm18</value>
    </variable>
    
    <variable name="MovieMPAAVar_UK">
        <value condition="SubString(ListItem.MPAA,PG) | SubString(Container(100).ListItem.Property(MPAA),PG)">uk/pg</value>
        <value condition="SubString(ListItem.MPAA,12A) | SubString(Container(100).ListItem.Property(MPAA),12A)">uk/12a</value>
        <value condition="SubString(ListItem.MPAA,12) | SubString(Container(100).ListItem.Property(MPAA),12)">uk/12</value>
        <value condition="SubString(ListItem.MPAA,15) | SubString(Container(100).ListItem.Property(MPAA),15)">uk/15</value>
        <value condition="SubString(ListItem.MPAA,R18) | SubString(Container(100).ListItem.Property(MPAA),R18)">uk/r18</value>
        <value condition="SubString(ListItem.MPAA,18) | SubString(Container(100).ListItem.Property(MPAA),18)">uk/18</value>
        <value condition="SubString(ListItem.MPAA,UC) | SubString(Container(100).ListItem.Property(MPAA),UC)">uk/uc</value>
        <value condition="SubString(ListItem.MPAA,U) | SubString(Container(100).ListItem.Property(MPAA),U)">uk/u</value>
    </variable>
    
    <variable name="MovieMPAAVar_US">
        <value condition="SubString(ListItem.MPAA,PG-13) | SubString(Container(100).ListItem.Property(MPAA),PG-13)">us/pg-13</value>
        <value condition="SubString(ListItem.MPAA,PG) | SubString(ListItem.MPAA,Approved) | SubString(Container(100).ListItem.Property(MPAA),PG) | SubString(Container(100).ListItem.Property(MPAA),Approved)">us/pg</value>
        <value condition="SubString(ListItem.MPAA,G) | SubString(Container(100).ListItem.Property(MPAA),G)">us/g</value>
        <value condition="StringCompare(ListItem.MPAA,R) | SubString(ListItem.MPAA,Rated R) | SubString(ListItem.MPAA,USA:R) | StringCompare(Container(100).ListItem.Property(MPAA),R) | SubString(Container(100).ListItem.Property(MPAA),Rated R) | SubString(Container(100).ListItem.Property(MPAA),USA:R)">us/r</value>
        <value condition="SubString(ListItem.MPAA,17) | SubString(Container(100).ListItem.Property(MPAA),17)">us/nc-17</value>
        <value condition="SubString(ListItem.MPAA,Not Rated) | SubString(ListItem.MPAA,Unrated) | SubString(Container(100).ListItem.Property(MPAA),Not Rated) | SubString(Container(100).ListItem.Property(MPAA),Unrated)">us/nr</value>
    </variable>

    <include name="AspectDimensionsSmall">
        <width>122</width>
        <height>56</height>
    </include>
    <include name="ResDimensionsSmall">
        <width>124</width>
        <height>56</height>
    </include>
    <include name="aCodecDimensionsSmall">
        <width>97</width>
        <height>56</height>
    </include>
    <include name="vCodecDimensionsSmall">
        <width>121</width>
        <height>56</height>
    </include>
    
    <include name="MPAADimensionsSmall">
        <width>121</width>
        <height>56</height>
    </include>
    
    <include name="InfoFlags">
        <control type="image">
            <posx>0</posx>
            <posy>0</posy>
            <width>77</width>
            <height>56</height>
            <texture>flags/other/3d-info.png</texture>
            <include>visiblehidefadeflags</include>
            <visible>substring(ListItem.FileNameAndPath,.3D.) | substring(ListItem.FileNameAndPath,-3D.)</visible>
        </control>
        <control type="image">
            <include>ResDimensionsSmall</include>
            <texture>$INFO[ListItem.VideoResolution,flags/res/,.png]</texture>
            <include>visiblehidefadeflags</include>
            <visible>!IsEmpty(ListItem.VideoResolution)</visible>
        </control>
        <control type="image">
            <include>AspectDimensionsSmall</include>
            <texture>$INFO[ListItem.VideoAspect,flags/aspectratio/,.png]</texture>
            <include>visiblehidefadeflags</include>
            <visible>!IsEmpty(ListItem.VideoAspect)</visible>
        </control>
        <control type="group">
            <width>121</width>
            <visible>!IsEmpty(ListItem.VideoCodec)</visible>
            <control type="image">
                <include>vCodecDimensionsSmall</include>
                <texture>$INFO[ListItem.videocodec,flags/video/,.png]</texture>
                <visible>![substring(ListItem.VideoCodec,divx) | substring(ListItem.VideoCodec,div3) | substring(ListItem.VideoCodec,div4) | substring(ListItem.VideoCodec,div5) | substring(ListItem.VideoCodec,dx50)]</visible>
                <include>visiblehidefadeflags</include>
            </control> 
            <control type="image">
                <include>vCodecDimensionsSmall</include>
                <texture>flags/video/divx.png</texture>
                <visible>substring(ListItem.VideoCodec,divx) | substring(ListItem.VideoCodec,div3) | substring(ListItem.VideoCodec,div4) | substring(ListItem.VideoCodec,div5) | substring(ListItem.VideoCodec,dx50)</visible>
                <include>visiblehidefadeflags</include>
            </control>
        </control>
        <control type="image">
            <include>aCodecDimensionsSmall</include>
            <texture>$INFO[ListItem.AudioCodec,flags/audio/,.png]</texture>
            <include>visiblehidefadeflags</include>
            <visible>!IsEmpty(ListItem.AudioCodec)</visible>
        </control>
        <control type="group">
            <width>121</width>
            <visible>Container.Content(movies) + !IsEmpty(ListItem.MPAA)</visible>
            <control type="image">
                <description>Language independent rating</description>
                <include>MPAADimensionsSmall</include>
                <texture>$VAR[MovieMPAAVar,flags/mpaa/movie/,.png]</texture>
            </control>
        </control>
        <control type="group">
            <width>121</width>
            <visible>[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + !IsEmpty(ListItem.MPAA)</visible>
            <include>TVRatingFlagsSmall</include>
        </control>
    </include>

    <include name="TVRatingFlagLayout">
        <width>150</width>
        <height>105</height>
    </include>

    <include name="TVRatingFlags">
        <control type="image">
            <include>TVRatingFlagLayout</include>
            <texture>$INFO[ListItem.MPAA,flags/mpaa/tv/medium/,.png]</texture>
        </control>
    </include>
    
    <include name="TVRatingFlagsSmall">
        <control type="image">
            <include>MPAADimensionsSmall</include>
            <texture>$INFO[ListItem.MPAA,flags/mpaa/tv/small/,.png]</texture>
        </control>
    </include>
</includes>